version: 2.1

# Define executors for different environments
executors:
  flutter_executor:
    docker:
      - image: cimg/android:2023.12.1
    working_directory: ~/project
    resource_class: medium
    environment:
      FLUTTER_VERSION: "3.19.6"

# Define reusable commands
commands:
  setup_flutter:
    description: "Install and setup Flutter SDK"
    steps:
      - run:
          name: Install Flutter SDK
          command: |
            if [ ! -d "$HOME/flutter" ]; then
              echo "Installing Flutter SDK..."
              git clone https://github.com/flutter/flutter.git -b stable ~/flutter
            else
              echo "Flutter SDK already exists, updating..."
              cd ~/flutter && git pull origin stable
            fi
            echo 'export PATH="$PATH:$HOME/flutter/bin"' >> $BASH_ENV
            echo 'export PATH="$PATH:$HOME/.pub-cache/bin"' >> $BASH_ENV
            source $BASH_ENV
            flutter doctor -v
      - run:
          name: Install dependencies
          command: |
            echo "Installing Flutter dependencies..."
            flutter pub get
            flutter doctor
      - run:
          name: Generate mocks and other files
          command: |
            echo "Generating mock files and other build artifacts..."
            dart run build_runner build --delete-conflicting-outputs || true

  restore_flutter_cache:
    description: "Restore Flutter and dependency caches"
    steps:
      - restore_cache:
          keys:
            - flutter-{{ checksum "pubspec.lock" }}-{{ .Environment.FLUTTER_VERSION }}-v2
            - flutter-{{ .Environment.FLUTTER_VERSION }}-v2
            - flutter-v2

  save_flutter_cache:
    description: "Save Flutter and dependency caches"
    steps:
      - save_cache:
          key: flutter-{{ checksum "pubspec.lock" }}-{{ .Environment.FLUTTER_VERSION }}-v2
          paths:
            - ~/.pub-cache
            - ~/flutter

# Define jobs
jobs:
  # Code quality and linting job
  code_quality:
    executor: flutter_executor
    steps:
      - checkout
      - restore_flutter_cache
      - setup_flutter
      - run:
          name: Format check
          command: dart format --output=none --set-exit-if-changed .
      - run:
          name: Analyze code
          command: flutter analyze --fatal-infos --fatal-warnings
      - save_flutter_cache

  # Unit and widget tests
  test:
    executor: flutter_executor
    steps:
      - checkout
      - restore_flutter_cache
      - setup_flutter
      - run:
          name: Run unit and widget tests
          command: flutter test --coverage
      - store_artifacts:
          path: coverage/lcov.info
          destination: coverage/lcov.info
      - save_flutter_cache

  # Build Android APK
  build_android:
    executor: flutter_executor
    steps:
      - checkout
      - restore_flutter_cache
      - setup_flutter
      - run:
          name: Build Android APK
          command: flutter build apk --release
      - store_artifacts:
          path: build/app/outputs/flutter-apk/app-release.apk
          destination: android/app-release.apk
      - save_flutter_cache

# Define workflows
workflows:
  version: 2
  
  # Basic workflow - runs on all branches
  build_and_test:
    jobs:
      - code_quality
      - test:
          requires:
            - code_quality
      - build_android:
          requires:
            - test
          filters:
            branches:
              only:
                - main
                - develop